{"version":3,"sources":["All_Components/UI/Button.module.css","All_Components/UI/loading.module.css","All_Components/Registraited/registraited.module.css","store/reducers.js","All_Components/UI/Button.js","All_Components/Form/FORM.js","All_Components/UI/loading.js","All_Components/UI/Cart.js","All_Components/Registraited/registraited.js","App.js","store/store.js","index.js","All_Components/Form/FORM.module.css"],"names":["module","exports","sliceFunc","createSlice","name","initialState","gmail","password","loading","showForm","showLogged","reducers","gmailChangeHandler","state","value","payload","passwordChangeHandler","submitToLocalStorage","localStorage","setItem","showLoading","notShowLoading","notShowLoadingAfter","sliceActions","actions","Button","props","className","classes","button","type","disabled","onClick","button_name","Form","useSelector","validation","dispatch","useDispatch","onSubmit","e","preventDefault","setTimeout","onChange","target","cls","input","pattern","Loading","spinner","Cart","children","Logged","values","logged","App","isShow","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,mBCA1DD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,OAAS,+B,2HCSrBC,EAAYC,YAAY,CAC5BC,KAAM,aACNC,aAVmB,CACnBC,MAAO,GACPC,SAAU,GACVC,SAAS,EACTC,UAAU,EACVC,YAAY,GAMZC,SAAU,CACRC,mBADQ,SACWC,EAAOC,GAASD,EAAMP,MAAQQ,EAAMC,SACvDC,sBAFQ,SAEcH,EAAOC,GAASD,EAAMN,SAAWO,EAAMC,SAC7DE,qBAHQ,SAGaJ,GACnBK,aAAaC,QAAQ,QAAyB,KAAhBN,EAAMP,MAAeO,EAAMP,MAAQ,aACjEY,aAAaC,QAAQ,WAA+B,KAAnBN,EAAMN,SAAkBM,EAAMN,SAAW,cAE5Ea,YAPQ,SAOIP,GACVA,EAAML,SAAU,EAChBK,EAAMJ,UAAW,EACjBI,EAAMH,YAAa,GAErBW,eAZQ,SAYOR,GACbA,EAAML,SAAU,EAChBK,EAAMH,YAAa,GAGrBY,oBAjBQ,SAiBYT,GAClBA,EAAML,SAAU,EAChBK,EAAMJ,UAAW,EACjBI,EAAMH,YAAa,MAKZa,EAAerB,EAAUsB,QACvBtB,I,wBC7BAuB,EARA,SAACC,GACd,OACE,wBAAQC,UAAWC,IAAQC,OAAQC,KAAMJ,EAAMI,KAAMC,SAAUL,EAAMK,SAAUC,QAASN,EAAMM,QAA9F,SACE,+BAAON,EAAMO,iB,gBC0CJC,EA1CF,WACX,IAAMrB,EAAQsB,aAAY,SAACtB,GAAD,OAAWA,EAAMuB,cACrCT,EAAYQ,aAAY,SAAAtB,GAAK,OAAIA,EAAMuB,WAAWT,aAClDI,EAAWI,aAAY,SAAAtB,GAAK,OAAIA,EAAMuB,WAAWL,YAEjDM,EAAWC,cAejB,OACE,uBAAMC,SATc,SAACC,GACrBA,EAAEC,iBACFJ,EAASd,EAAaH,eACtBiB,EAASd,EAAaN,wBACtByB,YAAW,WACTL,EAASd,EAAaF,oBACrB,MAGH,UACE,uBACEsB,SAjBqB,SAACH,GAC1BH,EAASd,EAAaX,mBAAmB4B,EAAEI,OAAO9B,SAiB9CA,MAAOD,EAAMP,MACbwB,KAAK,OACL1B,KAAK,QACLuB,UAAS,UAAKkB,IAAIC,MAAT,YAAkBnB,GAC3BoB,QAAQ,6CAEV,uBACEJ,SAtBwB,SAACH,GAC7BH,EAASd,EAAaP,sBAAsBwB,EAAEI,OAAO9B,SAsBjDA,MAAOD,EAAMN,SACbuB,KAAK,OACL1B,KAAK,WACLuB,UAAWkB,IAAIC,QAEjB,cAAC,EAAD,CAAQb,YAAY,QAAQH,KAAK,WAChCC,GAAY,8C,iBCvCJiB,EAHC,WACd,OAAO,qBAAKrB,UAAWkB,IAAII,WCEdC,G,MAHF,SAACxB,GACZ,OAAO,qBAAKC,UAAU,OAAf,SAAuBD,EAAMyB,a,iBC4BvBC,MAxBf,WACI,IAAMf,EAAWC,cACXe,EAASlB,aAAY,SAAAtB,GAAK,OAAIA,EAAMuB,cAQ1C,OACI,cAAC,EAAD,UACI,sBAAKT,UAAWkB,IAAIS,OAApB,UACI,gJACA,gCACI,wCAAWD,EAAO/C,SAClB,2CAAc+C,EAAO9C,eAEzB,cAAC,EAAD,CAAQ0B,YAAY,iCAAQD,QAfhB,WACpBK,EAASd,EAAaH,eACtBsB,YAAW,WACPL,EAASd,EAAaD,yBACvB,cCUIiC,MAjBf,WACE,IAAM/C,EAAU2B,aAAY,SAACtB,GAAD,OAAWA,EAAMuB,WAAW5B,WAClDgD,EAASrB,aAAY,SAACtB,GAAD,OAAWA,EAAMuB,WAAW3B,YACjDC,EAAayB,aAAY,SAAAtB,GAAK,OAAIA,EAAMuB,WAAW1B,cAEzD,OACE,qCACE,eAAC,EAAD,WACGF,GAAW,cAAC,EAAD,IACXgD,GAAU,cAAC,EAAD,OAGZ9C,GAAc,cAAC,EAAD,QCTN+C,EANDC,YAAe,CAC3BC,QAAS,CACPvB,WAAYlC,EAAUyD,WCC1BC,IAASC,OACP,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFK,SAASC,eAAe,U,kBCT1B/D,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,cAAgB,+B","file":"static/js/main.64f8a3b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__4EP0j\",\"badge\":\"Button_badge__TBHxV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"loading_spinner__1djdG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logged\":\"registraited_logged__3lEQn\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  gmail: '',\r\n  password: '',\r\n  loading: false,\r\n  showForm: true,\r\n  showLogged: false,\r\n  // disabled: true\r\n}\r\nconst sliceFunc = createSlice({\r\n  name: 'validation',\r\n  initialState: initialState,\r\n  reducers: {\r\n    gmailChangeHandler(state, value) { state.gmail = value.payload },\r\n    passwordChangeHandler(state, value) { state.password = value.payload },\r\n    submitToLocalStorage(state) {\r\n      localStorage.setItem('Gmail', state.gmail !== '' ? state.gmail : 'not Valid')\r\n      localStorage.setItem('password', state.password !== '' ? state.password : 'not Valid')\r\n    },\r\n    showLoading(state) {\r\n      state.loading = true\r\n      state.showForm = false\r\n      state.showLogged = false\r\n    },\r\n    notShowLoading(state,) {\r\n      state.loading = false\r\n      state.showLogged = true\r\n    },\r\n\r\n    notShowLoadingAfter(state) {\r\n      state.loading = false\r\n      state.showForm = true\r\n      state.showLogged = false\r\n    },\r\n\r\n  },\r\n})\r\nexport const sliceActions = sliceFunc.actions\r\nexport default sliceFunc\r\n","import classes from './Button.module.css'\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button className={classes.button} type={props.type} disabled={props.disabled} onClick={props.onClick}>\r\n      <span>{props.button_name}</span>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button","import { useDispatch, useSelector } from 'react-redux'\r\nimport { sliceActions } from '../../store/reducers'\r\nimport Button from '../UI/Button'\r\nimport cls from './FORM.module.css'\r\n\r\nconst Form = () => {\r\n  const state = useSelector((state) => state.validation)\r\n  const className = useSelector(state => state.validation.className)\r\n  const disabled = useSelector(state => state.validation.disabled)\r\n\r\n  const dispatch = useDispatch()\r\n  const gmailChangeHandler = (e) => {\r\n    dispatch(sliceActions.gmailChangeHandler(e.target.value))\r\n  }\r\n  const passwordChangeHandler = (e) => {\r\n    dispatch(sliceActions.passwordChangeHandler(e.target.value))\r\n  }\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(sliceActions.showLoading())\r\n    dispatch(sliceActions.submitToLocalStorage())\r\n    setTimeout(() => {\r\n      dispatch(sliceActions.notShowLoading())\r\n    }, 2000);\r\n  }\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <input\r\n        onChange={gmailChangeHandler}\r\n        value={state.gmail}\r\n        type=\"text\"\r\n        name=\"gmail\"\r\n        className={`${cls.input} ${className}`}\r\n        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\r\n      />\r\n      <input\r\n        onChange={passwordChangeHandler}\r\n        value={state.password}\r\n        type=\"text\"\r\n        name=\"password\"\r\n        className={cls.input}\r\n      />\r\n      <Button button_name=\"Login\" type=\"submit\" />\r\n      {disabled && <p>try again</p>}\r\n    </form>\r\n  )\r\n}\r\nexport default Form\r\n","import cls from './loading.module.css'\r\nconst Loading = () => {\r\n  return <div className={cls.spinner}></div>\r\n}\r\nexport default Loading\r\n","import './Cart.css'\r\nconst Cart = (props) => {\r\n  return <div className='cart'>{props.children}</div>\r\n}\r\nexport default Cart","import { sliceActions } from '../../store/reducers'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Button from '../UI/Button'\r\nimport Cart from '../UI/Cart'\r\nimport cls from './registraited.module.css'\r\n\r\nfunction Logged() {\r\n    const dispatch = useDispatch()\r\n    const values = useSelector(state => state.validation)\r\n    const showFormHandler = () => {\r\n        dispatch(sliceActions.showLoading())\r\n        setTimeout(() => {\r\n            dispatch(sliceActions.notShowLoadingAfter())\r\n        }, 2000);\r\n\r\n    }\r\n    return (\r\n        <Cart>\r\n            <div className={cls.logged}>\r\n                <h1>Вы зарегистрированы!</h1>\r\n                <div>\r\n                    <p>Gmail: {values.gmail}</p>\r\n                    <p>Password: {values.password}</p>\r\n                </div>\r\n                <Button button_name='Выйти' onClick={showFormHandler} />\r\n            </div>\r\n\r\n        </Cart>\r\n    )\r\n}\r\nexport default Logged","import { useSelector } from 'react-redux'\nimport Form from './All_Components/Form/FORM.js'\nimport Loading from './All_Components/UI/loading.js'\nimport Cart from './All_Components/UI/Cart'\nimport Logged from './All_Components/Registraited/registraited.js'\n\nfunction App() {\n  const loading = useSelector((state) => state.validation.loading)\n  const isShow = useSelector((state) => state.validation.showForm)\n  const showLogged = useSelector(state => state.validation.showLogged)\n\n  return (\n    <>\n      <Cart>\n        {loading && <Loading />}\n        {isShow && <Form />}\n        {/* <Form /> */}\n      </Cart>\n      {showLogged && <Logged />}\n    </>\n  )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport sliceFunc from './reducers'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    validation: sliceFunc.reducer,\r\n  },\r\n})\r\n\r\nexport default store\r\n","import { Provider } from 'react-redux'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport store from './store/store'\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n// ReactDOM.render(<App />, document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"FORM_input__1m0CM\",\"notValidClass\":\"FORM_notValidClass__17ffO\"};"],"sourceRoot":""}